AWSTemplateFormatVersion: 2010-09-09
Description: Create Elastifile Cloud File System
Parameters:
  KeyName:
    Description: EC2 Instance SSH Key
    Type: 'AWS::EC2::KeyPair::KeyName'
  VpcId:
    Description: Choose VPC
    Type: 'AWS::EC2::VPC::Id'
  Subnets:
    Type: 'AWS::EC2::Subnet::Id'
    Description: SubnetIds in your Virtual Private Cloud (VPC).
  InstanceType:
    Description: EC2 instance specs configuration
    Type: String
    Default: t2.xlarge
    AllowedValues:
      - t2.xlarge
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Mappings:
  AMIs:
    us-east-1:
      Name: ami-0359e3e3ccc7649b9
    us-west-1:
      Name: ami-031ccec578c8b6e61
    us-west-2:
      Name: ami-07b64e228b8a95236
    us-east-2:
      Name: ami-0022cff9fad52039c
Resources:
  ECFSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow SSH/HTTPS from anywhere, Allow all internal traffic
      VpcId: !Ref VpcId

  ECFSIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ECFSSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0

  ECFSIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ECFSSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref SSHLocation

  ECFSIngress3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ECFSSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref ECFSSecurityGroup

  ElastifileProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref ElastifileRole

  ElastifileRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEC2FullAccess'

  EManageInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 100
            VolumeType: gp2
      InstanceType: t2.xlarge
      ImageId: !FindInMap
        - AMIs
        - !Ref 'AWS::Region'
        - Name
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref ElastifileProfile
      Monitoring: true
      SecurityGroupIds:
        - !Ref ECFSSecurityGroup
      SubnetId: !Ref Subnets
      Tags:
        - Key: Name
          Value: Elastifile-eManage

  EManageElasticIp:
    Type: 'AWS::EC2::EIP'
    Properties:
      InstanceId: !Ref EManageInstance
      Domain: vpc

Outputs:
  EmanagePubURL:
    Description: eManage web public URL
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - EManageInstance
          - PublicDnsName
  EmanagePubIP:
    Description: eManage web public IP
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - EManageInstance
          - PublicIp
  EmanagePrivateURL:
    Description: eManage web private URL
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - EManageInstance
          - PrivateIp
  EmanageInstanceID:
    Description: eManage Instance ID
    Value: !Ref EManageInstance
  EmanageSSH:
    Description: eManage ssh
    Value: !Join
      - ''
      - - ssh centos@
        - !GetAtt
          - EManageInstance
          - PublicDnsName
        - ' -i '
        - !Ref KeyName
        - .pem